version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
      java: openjdk8
    commands:
      - echo Entered the install phase...
      - java -version
      - mvn --version
      - docker --version
    finally:
      - echo This always runs even if the update or install command fails
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Test started on `date`
      - mvn clean
      - mvn package -DskipTests
      - echo Build started on `date`
      - ls -a
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"ship-management-system","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
      - echo Sending test results to S3
      - aws s3 sync target/jacoco $S3_BUCKET
artifacts:
  files:
    - imagedefinitions.json
    - target/ship-management-system-0.0.1-SNAPSHOT.jar

cache:
  paths:
    - '/root/.m2/*/'
